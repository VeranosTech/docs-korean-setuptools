# SOME DESCRIPTIVE TITLE.
# Copyright (C) Python Packaging Authority
# This file is distributed under the same license as the setuptools package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: setuptools 40.6.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-12-18 15:12+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/python3.txt:3
msgid "Supporting both Python 2 and Python 3 with Setuptools"
msgstr ""

#: ../../docs/python3.txt:5
msgid "Starting with Distribute version 0.6.2 and Setuptools 0.7, the Setuptools project supported Python 3. Installing and using setuptools for Python 3 code works exactly the same as for Python 2 code."
msgstr ""

#: ../../docs/python3.txt:10
msgid "Setuptools provides a facility to invoke 2to3 on the code as a part of the build process, by setting the keyword parameter ``use_2to3`` to True, but the Setuptools project strongly recommends instead developing a unified codebase using `six <https://pypi.org/project/six/>`_, `future <https://pypi.org/project/future/>`_, or another compatibility library."
msgstr ""

#: ../../docs/python3.txt:19
msgid "Using 2to3"
msgstr ""

#: ../../docs/python3.txt:21
msgid "Setuptools attempts to make the porting process easier by automatically running 2to3 as a part of running tests. To do so, you need to configure the setup.py so that you can run the unit tests with ``python setup.py test``."
msgstr ""

#: ../../docs/python3.txt:26
msgid "See :ref:`test` for more information on this."
msgstr ""

#: ../../docs/python3.txt:28
msgid "Once you have the tests running under Python 2, you can add the use_2to3 keyword parameters to setup(), and start running the tests under Python 3. The test command will now first run the build command during which the code will be converted with 2to3, and the tests will then be run from the build directory, as opposed from the source directory as is normally done."
msgstr ""

#: ../../docs/python3.txt:34
msgid "Setuptools will convert all Python files, and also all doctests in Python files. However, if you have doctests located in separate text files, these will not automatically be converted. By adding them to the ``convert_2to3_doctests`` keyword parameter Setuptools will convert them as well."
msgstr ""

#: ../../docs/python3.txt:40
msgid "By default, the conversion uses all fixers in the ``lib2to3.fixers`` package. To use additional fixers, the parameter ``use_2to3_fixers`` can be set to a list of names of packages containing fixers. To exclude fixers, the parameter ``use_2to3_exclude_fixers`` can be set to fixer names to be skipped."
msgstr ""

#: ../../docs/python3.txt:46
msgid "An example setup.py might look something like this::"
msgstr ""

#: ../../docs/python3.txt:66
msgid "Differential conversion"
msgstr ""

#: ../../docs/python3.txt:68
msgid "Note that a file will only be copied and converted during the build process if the source file has been changed. If you add a file to the doctests that should be converted, it will not be converted the next time you run the tests, since it hasn't been modified. You need to remove it from the build directory. Also if you run the build, install or test commands before adding the use_2to3 parameter, you will have to remove the build directory before you run the test command, as the files otherwise will seem updated, and no conversion will happen."
msgstr ""

#: ../../docs/python3.txt:77
msgid "In general, if code doesn't seem to be converted, deleting the build directory and trying again is a good safeguard against the build directory getting \"out of sync\" with the source directory."
msgstr ""

#: ../../docs/python3.txt:82
msgid "Distributing Python 3 modules"
msgstr ""

#: ../../docs/python3.txt:84
msgid "You can distribute your modules with Python 3 support in different ways. A normal source distribution will work, but can be slow in installing, as the 2to3 process will be run during the install. But you can also distribute the module in binary format, such as a binary egg. That egg will contain the already converted code, and hence no 2to3 conversion is needed during install."
msgstr ""

#: ../../docs/python3.txt:91
msgid "Advanced features"
msgstr ""

#: ../../docs/python3.txt:93
msgid "If you don't want to run the 2to3 conversion on the doctests in Python files, you can turn that off by setting ``setuptools.use_2to3_on_doctests = False``."
msgstr ""

